// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @db.VarChar(50)
  password  String   @db.VarChar(200)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  roleId    Int // Foreign key relationship with Roles
  role      Role     @relation(fields: [roleId], references: [id])
  Todo      Todo[]

  @@map("users")
}

// Roles model representing user roles
model Role {
  id               Int                @id @default(autoincrement())
  roleName         UserRole
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  users            User[] //1-m w user
  permissionOnRole permissionOnRole[] //m-m with role and permission

  @@map("role")
}

enum UserRole {
  ADMIN
  MOD
  USER
}

enum permissionAction {
  read
  create
  update
  delete
}

// Permissions model representing permissions
model Permission {
  id               Int                @id @default(autoincrement())
  action           permissionAction
  resource         String
  permissionOnRole permissionOnRole[]

  @@map("permission")
}

model permissionOnRole {
  roleId       Int
  permissionId Int
  role         Role       @relation(fields: [roleId], references: [id])
  permission   Permission @relation(fields: [permissionId], references: [id])

  @@id([roleId, permissionId])
  @@map("role_permissions")
}

model Todo {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(50)
  description String   @db.VarChar(200)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int
  user        User     @relation(fields: [userId], references: [id])

  @@map("todos")
}
